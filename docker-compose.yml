# Versão do Docker Compose
version: '3.8'

# Definição dos serviços (contêineres)
services:
  # Serviço do Redis (banco em memória)
  redis:
    image: redis/redis-stack-server:latest
    ports:
      - "6379:6379"

  # Serviço do PostgreSQL (seu Data Warehouse)
  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: minhasenhasecreta  # Defina uma senha forte aqui
    ports:
      - "5432:5432" # Expõe a porta do Postgres para o seu PC
    volumes:
      - postgres_data:/var/lib/postgresql/data # Garante que os dados não se percam

  # Serviço da sua API em Python
  api:
    build: ./api  # Diz ao Docker para construir a imagem usando o Dockerfile na pasta 'api'
    ports:
      - "5000:5000" # Expõe a porta da API
    depends_on:
      - redis # Garante que o Redis inicie antes da API

  # Serviço do Metabase (visualização)
  metabase:
    image: metabase/metabase:latest
    ports:
      - "3000:3000" # Expõe a porta do Metabase
    environment:
      # Configurações para o Metabase usar o Postgres como seu banco interno
      MB_DB_TYPE: postgres
      MB_DB_HOST: postgres           # Aponta para o serviço 'postgres' definido acima
      MB_DB_PORT: 5432
      MB_DB_USER: postgres
      MB_DB_PASS: minhasenhasecreta  # Use a mesma senha definida no serviço do postgres
      MB_DB_DBNAME: metabase_app     # Nome do banco que o Metabase usará para si
    depends_on:
      - postgres # Garante que o Postgres inicie antes do Metabase

# Define o volume para persistir os dados do Postgres
volumes:
  postgres_data: